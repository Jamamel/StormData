{
    "contents" : "---\ntitle: 'Reproducible Research: Peer Assessment 1'\nauthor: \"Juan Manuel Hernandez\"\ndate: \"Sunday, November 16, 2014\"\noutput: html_document\n---\n\n```{r setoptions, echo=FALSE, results='hide'}\nlibrary(knitr)\nlibrary(data.table)\nlibrary(lubridate)\nlibrary(scales)\nlibrary(ggplot2)\nopts_chunk$set(echo = TRUE, results = 'hide')\n```\n\n\n## Loading and processing the data\n\nThis analysis will use the following libraries:\n\n- [data.table](http://cran.r-project.org/web/packages/data.table/index.html)\n- [lubridate](http://cran.r-project.org/web/packages/lubridate/index.html)\n- [ggplot2](http://cran.r-project.org/web/packages/ggplot2/index.html)\n- [scales](http://cran.r-project.org/web/packages/scales/index.html)\n\n**Make sure the zip folder where you've stored the zip file referenced in the assignment containing the data is set as your working directory.**\n\n```{r readdata}\nsetwd(\"C:/Users/Jamamel/Google Drive/John Hopkins Data Science/Reproducible Research/Project 1/RepData_PeerAssessment1\")\n\n# Unzip data and load data using quick \"fread\" function from data.table\nunzip(\"activity.zip\")\nd <- fread('activity.csv')\n```\n\nIn order to correctly perform the following analysis, we need to apply a few transformations to our data. Most of these are focused on creating \"date/time\" type variables which are easy to manipulate later on.\n\n```{r transformdata}\n# data.table uses specific functions to create IDate type objects which can then be manipulated\n# using other data-friendly functionality.\nd[,date := as.IDate(date)]\n\n# Create \"weekday\" variable as factor based on date.\nd[,weekday := wday(date,label = T)]\n\n# Create a \"time\" variable based on the intervals (format = \"HH:MM\").\nintervalmins <- substr(d$interval,nchar(d$interval) - 1,nchar(d$interval))\nintervalmins[nchar(intervalmins) == 1] <- paste('0',intervalmins[nchar(intervalmins) == 1], sep = '')\nintervalhrs <- substr(d$interval,nchar(d$interval) - 3,nchar(d$interval) - 2)\nintervalhrs[intervalhrs == ''] <- '00'\nd[, time := as.ITime(paste(intervalhrs, intervalmins, sep = ':'), format = \"%H:%M\")]\n```\n\n```{r, previewdata, results='markup', echo=FALSE}\nprint(d,type = 'html')\n```\n\n##What is mean total number of steps taken per day?\n\n```{r, question1}\n# Calculate total number, mean, and median of steps per day.\ndt1 <- d[!is.na(steps), list(sum(steps, na.rm = T),\n                             round(mean(steps, na.rm = T),1),\n                             quantile(steps, .50, na.rm = TRUE)),\n         by = 'date']\nsetnames(dt1, old = c('V1','V2','V3'), new = c('Steps', 'Mean', 'Median'))\n```\n\nWhich yields the following distribution of total, mean, and median number of steps per day.\n\n```{r previewq1,results='markup', echo=FALSE}\nprint(dt1,type = 'html')\n```\n\nWhen plotted normally, we see the distribution is fairly nicely distributed around \n`r median(dt1$Steps)` steps per day. \n\n```{r plotq1,results='markup'}\n# Plot histogram of Total steps per day\nhist1 <- ggplot(dt1, aes(x = Steps)) +\n  geom_histogram()\nhist1\n```\n\nIf we apply a log10 transformation the 2 outlying observations are easy to find even with a histogram.\n```{r plotq1log,results='markup'}\nhist1 + scale_x_log10()\n```\n\n\n##What is the average daily activity pattern?\n\n```{r q2, results='markup'}\n# Calculate average number of steps taken across all days by interval\ndt2 <- d[!is.na(steps), list(round(mean(steps, na.rm = T),1)),by = 'time']\nsetnames(dt2, old = c('time','V1'), new = c('Interval', 'Steps'))\n\n# Identify 5-min interval with highest average number of steps taken across all days.\nmaxInterval <- match(max(dt2$Steps),dt2$Steps)\nmaxIntLab <-  paste(hour(dt2$Interval[maxInterval]),\n                    ':',\n                    minute(dt2$Interval[maxInterval]),\n                    ' - ',\n                    dt2$Steps[maxInterval],\n                    ' steps',sep = '')\n\n# Plot time series of average steps taken across days (y-axis) by interval (x-axis)\ndt2[, Interval := as.POSIXct(strftime(Interval, format=\"%H:%M\"), format=\"%H:%M\")]\nlines2 <- ggplot(dt2, aes(x = Interval, y = Steps, group=1)) +\n  geom_line() +\n  geom_point(aes(x = dt2$Interval[maxInterval], y = dt2$Steps[maxInterval]),colour = 'red', size = 3) +\n  scale_x_datetime(labels = date_format(\"%H:%M\")) +\n  annotate(\"text\", label = maxIntLab, \n           x = dt2$Interval[maxInterval], \n           y = dt2$Steps[maxInterval] + 10, \n           size = 5,fontface = \"bold\")\nlines2\n\n```\n\nClearly, most of the walking takes place in the mornings, pressumably on this person's way to work or as part of their morning routine. The highest activity is concentrated around `r maxIntLab`.\n\n\n##Imputing missing values\n\n```{r missings}\n# Calculate number of observations with missing values (NA) in \"steps\"\nnmissing <- nrow(d[,d[is.na(steps)]])\n```\n\nThere are `r nmissing` observations without a record of the number of steps taken across that interval.\n\nWe calculate the average number of steps taken by weekday & interval to impute said missing values.\n\n```{r impute}\n# To impute said missing values, we calculate the average number of steps taken by weekday & interval\n# These will be the values to impute.\nauxdt3 <- d[, list(round(mean(steps, na.rm = T),1)),by = c('weekday','time')]\nsetnames(auxdt3,'V1','Steps')\ndt3 <- copy(d)\ndt3[,steps := as.numeric(steps)]\nsetkeyv(auxdt3,c('weekday','time'))\ndt3[is.na(steps),steps := auxdt3[dt3[is.na(steps),c('weekday','time'),with = F],'Steps',with = F]]\n\n\n# Calculate total number, mean, and median of steps per day.\ndt3.1 <- dt3[!is.na(steps), list(sum(steps),\n                             round(mean(steps),1),\n                             quantile(steps, .50,)),\n         by = 'date']\nsetnames(dt3.1, old = c('V1','V2','V3'), new = c('Steps', 'Mean', 'Median'))\n\n# Create histogram of Total steps per day\nhist3 <- ggplot(dt3.1, aes(x = Steps)) +\n  geom_histogram()\n```\n\nWhen plotted normally, we see the distribution is fairly nicely distributed around \n`r as.integer(median(dt3.1$Steps))` steps per day instead of `r median(dt1$Steps)` steps before imputation.It would appear then that imputation has helped concentrate our data and reduced its variability.\n\n```{r plotq3,echo=FALSE,results='markup'}\ndt3.1\nhist3\n```\n\nOverlaying the 2 distributions (before and after imputation) of total steps across intervals by day we confirm imputation has caused the variance to shrink, increasing our distribution kurtosis.\n\n```{r comphist}\ndt1[,Impute := factor(1,levels = 1:2,labels = c('No','Yes'))]\ndt3.1[,Impute := factor(2,levels = 1:2,labels = c('No','Yes'))]\n\ncompdt <- rbind(dt3.1,dt1)\ncomphist <- ggplot(compdt,aes(x = Steps,colour = Impute,fill = Impute)) +\n  geom_density(color = NA,alpha = 0.5) +\n  xlab(\"Total Steps\") + scale_fill_manual(values=c(No = 'red',Yes = 'green'))\n```\n```{r plotcomphist,echo=FALSE,results='markup'}\ncomphist\n```\n\n\n##Are there differences in activity patterns between weekdays and weekends?\n\n```{r q4}\n# Create \"daytype\" factor, identifying weekend vs. week days\ndt3[,daytype := factor(ifelse(weekday %in% c('Sun','Sat'),'Weekend','Weekday'))]\n\n# Calculate average number of steps taken across all days by interval and daytype\ndt4 <- dt3[!is.na(steps), list(round(mean(steps, na.rm = T),1)),by = c('time','daytype')]\nsetnames(dt4, old = c('time','V1'), new = c('Interval', 'Steps'))\n\n# Plot time series of average steps taken across days (y-axis) by interval (x-axis), using daytype\n# as panel divider.\ndt4[, Interval := as.POSIXct(strftime(Interval, format=\"%H:%M\"), format=\"%H:%M\")]\nlines4 <- ggplot(dt4, aes(x = Interval, y = Steps, group=1)) +\n  geom_line() +\n  scale_x_datetime(labels = date_format(\"%H:%M\")) +\n  facet_grid(daytype ~ .)\n```\n```{r previewq4,results='markup',echo=FALSE}\ndt4\nlines4\n```",
    "created" : 1416445540077.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "357926140",
    "id" : "C7D72E5B",
    "lastKnownWriteTime" : 1416156791,
    "path" : "C:/Users/Jamamel/Google Drive/John Hopkins Data Science/Reproducible Research/Project 1/RepData_PeerAssessment1/PA1_template.Rmd",
    "project_path" : null,
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_markdown"
}